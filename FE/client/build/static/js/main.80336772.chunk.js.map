{"version":3,"sources":["audios/hitterES.mp3","audios/hitES.mp3","audios/homeES.mp3","audios/MatchBGM.mp3","audios/readyES.mp3","audios/SelectBGM.mp3","assets/loading.svg","styles/GlobalStyle.js","utils/effectSound.js","components/main/Main.jsx","hooks/useSound.js","hooks/useFetch.js","constants/url.js","reducer/MatchReducer.js","mock/mockData.js","store/MatchStore.jsx","components/match/scoreBoard/TopBoard.jsx","components/match/scoreBoard/BottomBoard.jsx","components/match/scoreBoard/ScoreBoard.jsx","components/match/matchLog/LogDetail.jsx","components/match/matchLog/MatchLog.jsx","components/match/ground/Hitter.jsx","components/match/ground/Base.jsx","components/match/ground/GameButtons.jsx","components/match/ground/Ground.jsx","components/match/detailInfo/TScore.jsx","components/match/detailInfo/ScoreInfo.jsx","components/match/detailInfo/TPlayer.jsx","components/match/detailInfo/PlayerInfo.jsx","components/match/detailInfo/InfoButtons.jsx","components/match/detailInfo/DetailInfo.jsx","components/match/Match.jsx","utils/dataFetch.js","components/select/Games.jsx","components/select/Select.jsx","components/NotFound.jsx","App.js","index.js"],"names":["module","exports","fonts","css","GlobalStyle","createGlobalStyle","reset","effectSound","src","sound","volume","soundInject","Howl","MainWrap","styled","div","Background","MainInner","Title","Main","hitterES","play","href","className","useSound","fadeoutTime","soundStop","stop","soundPlay","useEffect","on","fadeouttime","setTimeout","fade","duration","seek","useFetch","callback","url","option","method","useState","loading","setLoading","fetchInitialData","a","fetch","response","json","data","URL","BASE","process","GAMES","SELECT_TEAM","SELECT_GAME","REACT_APP_SELECT_GAEM_API","PLAYER_LIST","gameId","replace","ballCountReducer","ballCount","type","payload","ball","strike","out","playerListReducer","playerList","matchLog","number","name","log","id","status","result","baseCount","chance","inning","top_bottom","scoreBoard","away","teamName","player","score","home","currentPlayer","pitcher","pitchNumber","hitter","batterBox","hit","detailScore","board","scoring","totalScore","MatchContext","createContext","MatchStore","children","teamId","useReducer","playerListDispatch","mock","setBaseCount","ballCountDispatch","mockData","Provider","value","TopBoardWrap","TopBoard","useContext","BottomBoardWrap","BottomBoard","ScoreBoardWrap","ScoreBoard","LogDetailWrap","memo","logDetails","reverse","map","key","MatchLogWrap","MatchLog","logs","idx","HitterImg","Hitter","currBase","Base","boxOnHitter","runners","hitterSound","GameButtonsWrap","GameButtons","setBoxOnHitter","setRunners","hitSound","hitES","homeSound","homeES","timeoutId","useRef","updateBallCount","clearTimeout","current","onClick","updateRunners","runner","props","setRunnerAnim","disabled","alert","GroundWrap","Ground","TScore","scoreData","inningScoreFrame","inningScore","reduce","acc","ScoreInfoWrap","ScoreInfoBox","ScoreInfo","showContent","showClassName","scoreInfo","data-type","data-content","width","TPlayer","teamData","hitters","teamInfo","average","colSpan","totalsBatterBox","totalsHit","totalsOut","PlayerInfoWrap","PlayerInfoBox","CenterLine","PlayerInfo","playerInfo","InfoButtonsWrap","InfoButtons","setShowPanel","setShowContent","handleShowScoreInfo","showItem","DetailInfo","defaultState","showPanel","target","dataset","_showContent","content","MatchWrap","Match","useParams","MatchBGM","dataFetch","Game","Games","gameData","setReady","setStateText","readySound","readyES","history","useHistory","intervalId","fetchOption","credentials","headers","Cookie","handleSelectTeam","teamUrl","gameUrl","setInterval","clearInterval","push","games","game","gameNumber","data-team-id","SelectWrap","SelectInner","StateText","SelectBox","LoadingWarp","Select","setGameData","ready","stateText","SelectBGM","alt","NotFoundWrap","NotFoundInner","NotFound","wait","setWait","to","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80336772.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hitterES.2826e60d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hitES.ee765d88.mp3\";","module.exports = __webpack_public_path__ + \"static/media/homeES.2c31d33f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/MatchBGM.0231cb49.mp3\";","module.exports = __webpack_public_path__ + \"static/media/readyES.8c95a085.mp3\";","module.exports = __webpack_public_path__ + \"static/media/SelectBGM.c77f557a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/loading.ab3ef0f9.svg\";","import { createGlobalStyle, css } from 'styled-components';\r\nimport { reset } from 'styled-reset';\r\n\r\nconst fonts = css`\r\n@font-face { \r\n    font-family: 'ChosunGs'; \r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@1.0/ChosunGs.woff') format('woff'); \r\n    font-weight: normal; \r\n    font-style: normal; \r\n    }\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  ${fonts}\r\n\r\n  body {\r\n    font-family: \"ChosunGs\", -apple-system, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    width : 100%;\r\n    height: 100vh;\r\n  }\r\n  #root {\r\n    height : 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle","import { Howl } from 'howler';\r\n\r\nfunction effectSound(src, volume = 1) {\r\n    let sound;\r\n    const soundInject = (src) => {\r\n        sound = new Howl({ src });\r\n        sound.volume(volume);\r\n    }\r\n    soundInject(src);\r\n    return sound;\r\n}\r\n\r\nexport default effectSound;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport effectSound from '../../utils/effectSound';\r\nimport hitterES from '../../audios/hitterES.mp3';\r\n\r\nconst MainWrap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -10;\r\n    width : 100%;\r\n    height : 100%;\r\n    background : url('/images/main-background.jpg') no-repeat;\r\n    background-size : 100% 100%;\r\n    filter: blur(5px);\r\n    -webkit-filter: blur(5px);\r\n`;\r\n\r\nconst MainInner = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n    background-color : #00000099;\r\n    & .login-btn {\r\n        width: 100px;\r\n        height: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size : 100px;\r\n    font-weight : 600;\r\n    margin-bottom : 80px;\r\n    background-image: linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red);   \r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n`;\r\n\r\nconst Main = () => {\r\n    const hitterSound = effectSound(hitterES, 0.7);\r\n    hitterSound.play();\r\n\r\n    return (\r\n        <MainWrap>\r\n            <MainInner>\r\n                <Title>신나는 야구 게임 ~.~</Title>\r\n                {/* <Link to='/select'>\r\n                    <button className='login-btn'>로그인</button>\r\n                </Link> */}\r\n                <a href='https://github.com/login/oauth/authorize/?client_id=4946b46078dcaa5adfa6&scope=user'>\r\n                    <button className='login-btn'>로그인</button>\r\n                </a>\r\n            </MainInner>\r\n            <Background />\r\n        </MainWrap>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { useEffect } from 'react'\r\nimport { Howl } from 'howler';\r\n\r\nfunction useSound(src, volume = 1, fadeoutTime = 0) {\r\n    let sound;\r\n    const soundStop = () => sound.stop();\r\n    const soundPlay = (src) => {\r\n        sound = new Howl({ src });\r\n        sound.volume(volume);\r\n        sound.play();\r\n    }\r\n\r\n    useEffect(() => {\r\n        soundPlay(src);\r\n        sound.on('play', () => {\r\n            const fadeouttime = fadeoutTime;\r\n            setTimeout(() => sound.fade(volume, 0, fadeouttime), (sound.duration() - sound.seek()) * 1000 - fadeouttime);\r\n        });\r\n        return soundStop;\r\n    }, []);\r\n}\r\n\r\nexport default useSound;","import { useState, useEffect } from 'react';\r\n\r\nfunction useFetch(callback, url, option = { method: 'GET' }) {\r\n    const [loading, setLoading] = useState(true);\r\n    const fetchInitialData = async () => {\r\n        const response = await fetch(url, option);\r\n        const data = await response.json();\r\n        callback(data);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInitialData();\r\n    }, []);\r\n\r\n    return loading;\r\n}\r\n\r\nexport default useFetch;","const URL = {\r\n    BASE: process.env.REACT_APP_BASE_URL,\r\n    GAMES: process.env.REACT_APP_GAMES_API,\r\n    SELECT_TEAM: process.env.REACT_APP_SELECT_TEAM_API,\r\n    SELECT_GAME: process.env.REACT_APP_SELECT_GAEM_API,\r\n    PLAYER_LIST: (gameId) => process.env.REACT_APP_PLAYER_LIST_API.replace('{id}', gameId),\r\n}\r\n\r\nexport default URL;","export const ballCountReducer = (ballCount, { type, payload }) => {\r\n    switch (type) {\r\n        case 'INIT_BALLCOUNT':\r\n            return payload;\r\n\r\n        case 'BALL':\r\n            let ball = ballCount.ball;\r\n            ball++;\r\n            if (ball >= 4) ball = 0;\r\n            return { ...ballCount, ball };\r\n\r\n        case 'STRIKE':\r\n            let strike = ballCount.strike;\r\n            strike++;\r\n            if (strike >= 3) strike = 0;\r\n            return { ...ballCount, strike };\r\n\r\n        case 'OUT':\r\n            let out = ballCount.out;\r\n            out++;\r\n            if (out >= 3) out = 0;\r\n            return { ...ballCount, out };\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const playerListReducer = (playerList, { type, payload }) => {\r\n    switch (type) {\r\n        case 'INIT_PLAYERLIST':\r\n            return payload;\r\n\r\n        case 'UPDATA_PLAYERLIST':\r\n            return { ...playerList, ...payload };\r\n\r\n        default:\r\n            break;\r\n    }\r\n}","export const matchLog = [\r\n    {\r\n        number: 1,\r\n        name: '공 사 중',\r\n        log: [\r\n            {\r\n                id: 1,\r\n                status: '스트라이크',\r\n                strike: 1,\r\n                ball: 0\r\n            },\r\n            {\r\n                id: 2,\r\n                status: '볼',\r\n                strike: 1,\r\n                ball: 1\r\n            }\r\n        ],\r\n        result: null\r\n    },\r\n    {\r\n        number: 2,\r\n        name: '공 사 중',\r\n        log: [\r\n            {\r\n                id: 1,\r\n                status: '스트라이크',\r\n                strike: 1,\r\n                ball: 0\r\n            },\r\n            {\r\n                id: 2,\r\n                status: '스트라이크',\r\n                strike: 2,\r\n                ball: 0\r\n            },\r\n            {\r\n                id: 3,\r\n                status: '볼',\r\n                strike: 2,\r\n                ball: 1\r\n            }\r\n        ],\r\n        result: '안타'\r\n    },\r\n]\r\n\r\nexport const ballCount = {\r\n    strike: 0,\r\n    ball: 0,\r\n    out: 0,\r\n}\r\n\r\nexport const baseCount = {\r\n    base: 0\r\n}\r\n\r\nexport const chance = {\r\n    inning: 1,\r\n    top_bottom: \"top\",\r\n    chance: \"수비\"\r\n}\r\n\r\nexport const scoreBoard = {\r\n    away: {\r\n        teamName: '공 사 중',\r\n        player: 'Sunny',\r\n        score: '04'\r\n    },\r\n    home: {\r\n        teamName: '공 사 중',\r\n        player: 'Taek',\r\n        score: '04'\r\n    },\r\n}\r\n\r\nexport const currentPlayer = {\r\n    pitcher: {\r\n        name: '공 사 중',\r\n        pitchNumber: '04',\r\n    },\r\n    hitter: {\r\n        name: '공 사 중',\r\n        batterBox: 1,\r\n        hit: 0\r\n    }\r\n}\r\n\r\nexport const detailScore = {\r\n    away: {\r\n        teamName: '공 사 중',\r\n        player: 'Sunny',\r\n        board: [\r\n            {\r\n                inning: 1,\r\n                scoring: 0\r\n            },\r\n        ],\r\n        totalScore: 0\r\n    },\r\n\r\n    home: {\r\n        teamName: '공 사 중',\r\n        player: 'Taek',\r\n        board: [\r\n\r\n        ],\r\n        totalScore: 0\r\n    },\r\n}","import React, { useState, useReducer, createContext, useEffect } from 'react'\r\nimport useFetch from '../hooks/useFetch';\r\nimport URL from '../constants/url';\r\nimport { ballCountReducer, playerListReducer } from '../reducer/MatchReducer';\r\n\r\nimport * as mock from '../mock/mockData';\r\n\r\nexport const MatchContext = createContext();\r\n\r\nconst MatchStore = ({ children, teamId, gameId }) => {\r\n    const [playerList, playerListDispatch] = useReducer(playerListReducer, {});\r\n\r\n    // 임시 mock 데이터\r\n    const [baseCount, setBaseCount] = useState(mock.baseCount.base);\r\n    const [ballCount, ballCountDispatch] = useReducer(ballCountReducer, {});\r\n    const initBallCount = (initData) => ballCountDispatch({ type: 'INIT_BALLCOUNT', payload: initData });\r\n\r\n    const mockData = {\r\n        matchLog: mock.matchLog,\r\n        chance: mock.chance,\r\n        scoreBoard: mock.scoreBoard,\r\n        currentPlayer: mock.currentPlayer,\r\n        detailScore: mock.detailScore,\r\n    }\r\n\r\n    useEffect(() => {\r\n        initBallCount(mock.ballCount);\r\n    }, []);\r\n\r\n    return (\r\n        <MatchContext.Provider\r\n            value={{\r\n                ...mockData, teamId, gameId,\r\n                playerList, playerListDispatch,\r\n                ballCount, ballCountDispatch,\r\n                baseCount, setBaseCount,\r\n            }}>\r\n            {children}\r\n        </MatchContext.Provider >\r\n    )\r\n}\r\n\r\nexport default MatchStore\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\n\r\nconst TopBoardWrap = styled.div`\r\n    display : flex;\r\n    height : 75%;\r\n    & .team-info {\r\n    width : 32%;\r\n    display : flex;\r\n    flex-direction : column;\r\n        & .team-score {\r\n            display : flex;\r\n            align-items : center;\r\n            justify-content : center;\r\n            font-size : 50px;\r\n            height : 70%;\r\n            &.board-away {\r\n                background-color : #f00;\r\n            }\r\n            &.board-home {\r\n                background-color : #00f;\r\n            }\r\n        }\r\n        & .team-name {\r\n            font-size : 22px;\r\n            height : 30%;\r\n            line-height: 33.75px;\r\n            letter-spacing: -0.07em;\r\n            white-space: nowrap;\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            &.board-away {\r\n                background-color : #ff8585;\r\n            }\r\n            &.board-home {\r\n                background-color : #8b8bff;\r\n            }\r\n        }\r\n    }\r\n    & .inning-info {\r\n        position : relative;\r\n        background-color : #000;\r\n        width : 36%;\r\n        & .base-info {\r\n            position : absolute;\r\n            width : 25px;\r\n            height : 25px;\r\n            background-color : #5a5a5a;\r\n            transform : rotate(45deg);\r\n            &.first-base {\r\n                top : 35px;\r\n                right : 20px;\r\n            }\r\n            &.second-base {\r\n                top : 15px;\r\n                right : 50%;\r\n                transform : translateX(50%) rotate(45deg);\r\n            }\r\n            &.third-base {\r\n                top : 35px;\r\n                left : 20px;\r\n            }\r\n            &.fill-base {\r\n                background-color : #ff0;\r\n            }\r\n        }\r\n        & .inning-info-text {\r\n            width : 100px;\r\n            position : absolute;\r\n            bottom : 10px;\r\n            left : 50%;\r\n            transform : translateX(-50%);\r\n            font-size : 22px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TopBoard = () => {\r\n    const { baseCount, chance, scoreBoard } = useContext(MatchContext);\r\n\r\n    return (\r\n        <TopBoardWrap>\r\n            <div className='team-info'>\r\n                <div className='team-score board-away'>{scoreBoard.away.score}</div>\r\n                <div className='team-name board-away'>{scoreBoard.away.teamName}</div>\r\n            </div>\r\n            <div className='team-info'>\r\n                <div className='team-score board-home'>{scoreBoard.home.score}</div>\r\n                <div className='team-name board-home'>{scoreBoard.home.teamName}</div>\r\n            </div>\r\n            <div className='inning-info'>\r\n                <div className={`base-info first-base ${baseCount >= 1 && 'fill-base'}`} />\r\n                <div className={`base-info second-base ${baseCount >= 2 && 'fill-base'}`} />\r\n                <div className={`base-info third-base ${baseCount >= 3 && 'fill-base'}`} />\r\n                <div className='inning-info-text'>{chance.inning}회{chance.top_bottom === 'top' ? '초' : '말'}</div>\r\n            </div>\r\n        </TopBoardWrap>\r\n    )\r\n}\r\n\r\nexport default TopBoard\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\n\r\nconst BottomBoardWrap = styled.div`\r\n    display : flex;\r\n    height : 25%;\r\n    font-size : 22px;\r\n    & .ball-count {\r\n        width : 64%;\r\n        background-color : #000;\r\n        display : flex;\r\n        justify-content : space-around;\r\n        align-items : center;\r\n        & .b-count-text {\r\n            margin-right : 3px;\r\n        }\r\n        & .b-count {\r\n            width : 15px;\r\n            height : 15px;\r\n            display : inline-block;\r\n            background-color : #5a5a5a;\r\n            border-radius : 50%;\r\n            margin-left : 1.5px;\r\n            &.ball-count {\r\n                background-color : #0f0;\r\n            }\r\n            &.strike-count {\r\n                background-color : #ff0;\r\n            }\r\n            &.out-count {\r\n                background-color : #f00;\r\n            }\r\n        }\r\n    }\r\n    & .pitches-count {\r\n        width : 36%;\r\n        background-color : #5a5a5a;\r\n        display : flex;\r\n        justify-content : center;\r\n        align-items : center;\r\n        & .p-count {\r\n            margin-left : 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst BottomBoard = () => {\r\n    const { ballCount, currentPlayer } = useContext(MatchContext);\r\n\r\n    return (\r\n        <BottomBoardWrap>\r\n            <div className='ball-count'>\r\n                <div>\r\n                    <span className='b-count-text'>B</span>\r\n                    <span className={`b-count ${ballCount.ball >= 1 && 'ball-count'}`} />\r\n                    <span className={`b-count ${ballCount.ball >= 2 && 'ball-count'}`} />\r\n                    <span className={`b-count ${ballCount.ball >= 3 && 'ball-count'}`} />\r\n                </div>\r\n                <div>\r\n                    <span className='b-count-text'>S</span>\r\n                    <span className={`b-count ${ballCount.strike >= 1 && 'strike-count'}`} />\r\n                    <span className={`b-count ${ballCount.strike >= 2 && 'strike-count'}`} />\r\n                </div>\r\n                <div>\r\n                    <span className='b-count-text'>O</span>\r\n                    <span className={`b-count ${ballCount.out >= 1 && 'out-count'}`} />\r\n                    <span className={`b-count ${ballCount.out >= 2 && 'out-count'}`} />\r\n                </div>\r\n            </div>\r\n            <div className='pitches-count'>\r\n                <div>⚾</div>\r\n                <div className='p-count'>{currentPlayer.pitcher.pitchNumber}</div>\r\n            </div>\r\n        </BottomBoardWrap>\r\n    )\r\n}\r\n\r\nexport default BottomBoard\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport TopBoard from './TopBoard';\r\nimport BottomBoard from './BottomBoard';\r\n\r\nconst ScoreBoardWrap = styled.div`\r\n    outline : 1px solid #5a5a5a;\r\n    position : absolute;\r\n    top : 30px;\r\n    left : 30px;\r\n    width : 300px;\r\n    height : 150px;\r\n    color : #fff;\r\n    text-align : center;\r\n    z-index : 1;\r\n`;\r\n\r\nconst ScoreBoard = () => {\r\n    return (\r\n        <ScoreBoardWrap>\r\n            <TopBoard />\r\n            <BottomBoard />\r\n        </ScoreBoardWrap>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst LogDetailWrap = styled.div`\r\n    display : flex;\r\n    justify-content : space-around;\r\n    margin-bottom : 5px;\r\n    font-size : 20px;\r\n    & .log-detail-id {\r\n        background-color : #fff;\r\n        width : 20px;\r\n        height : 20px;\r\n        color : #000;\r\n        border-radius : 50%;\r\n    }\r\n    & .log-detail-status {\r\n        width : 150px;\r\n    }\r\n    & .log-detail-b-count {\r\n        color : #918d8d;\r\n    }\r\n`;\r\n\r\nconst LogDetail = ({ log }) => {\r\n    const logDetails = log.reverse().map(data => {\r\n        return (\r\n            <LogDetailWrap key={data.id}>\r\n                <div className='log-detail-id'>{data.id}</div>\r\n                <div className='log-detail-status'>{data.status}</div>\r\n                <div className='log-detail-b-count'>S{data.strike} B{data.ball}</div>\r\n            </LogDetailWrap>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {logDetails}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(LogDetail);\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components';\r\nimport LogDetail from './LogDetail';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\n\r\nconst MatchLogWrap = styled.div`\r\n    position : absolute;\r\n    bottom : 5px;\r\n    right : 5px;\r\n    width : 300px;\r\n    height : 80%;\r\n    background-color : #00000080;\r\n    color : #fff;\r\n    outline : 1px solid #5a5a5a;\r\n    font-size : 22px;\r\n    text-align : center;\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    overflow : auto;\r\n    z-index : 1;\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n    & .log-wrap {\r\n        width : 90%;\r\n        height : auto;\r\n        margin : 20px;\r\n        margin-bottom : 40px;\r\n        & .log-hitter {\r\n            margin-bottom : 10px;\r\n            color: #ff8585;\r\n            &.prev-hitter {\r\n            color: #adadff;\r\n            }\r\n        }\r\n        & .log-result {\r\n            margin-bottom : 15px;\r\n            color: #8b8bff;\r\n        }\r\n    }\r\n`;\r\n\r\nconst MatchLog = () => {\r\n    const { matchLog } = useContext(MatchContext);\r\n\r\n    const logs = matchLog.map((data, idx) => {\r\n        return (\r\n            <div className='log-wrap' key={idx}>\r\n                <div className={`log-hitter ${data.result && 'prev-hitter'}`}>{data.number}번 타자 {data.name}</div>\r\n                <div className='log-result'>{data.result && `${data.result}!`}</div>\r\n                <LogDetail log={data.log} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <MatchLogWrap>\r\n            {logs}\r\n        </MatchLogWrap>\r\n    )\r\n}\r\n\r\nexport default MatchLog\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst HitterImg = styled.div`\r\n    position : absolute;\r\n    bottom : 5%;\r\n    left : 50%;\r\n    transform : translateX(-50%);\r\n    width : 3%;\r\n    height : 9%;\r\n    background : url('/images/mario.png') no-repeat;\r\n    background-size : 100% 100%;\r\n    animation-duration: 2s;\r\n    animation-fill-mode: both;\r\n    animation-timing-function: cubic-bezier(.54,-0.39,.51,1.44);\r\n    &.first {\r\n        animation-name: first;\r\n    }\r\n    &.second {\r\n        animation-name: second;\r\n    }\r\n    &.third {\r\n        animation-name: third;\r\n    }\r\n    &.home {\r\n        animation-name: home;\r\n    }\r\n    @keyframes first {\r\n        0%  { bottom:5%; left:50%; }\r\n        99% { transform : translateX(-50%) rotate(3600deg) scaleX(1); bottom:32%; left:72%; }\r\n        100% { transform : translateX(-50%) scaleX(-1); bottom:32%; left:72%; }\r\n    }\r\n    @keyframes second {\r\n        0%  { bottom:32%; left:72%; }\r\n        99% { transform : translateX(-50%) rotate(3600deg) scaleX(1); bottom:48%; left:50%; }\r\n        100% { transform : translateX(-50%) scaleX(-1); bottom:48%; left:50%; }\r\n    }\r\n    @keyframes third {\r\n        0%  { bottom:48%; left:50%; }\r\n        99% { transform : translateX(-50%) rotate(3600deg) scaleX(1); bottom:32%; left:28%; }\r\n        100% { transform : translateX(-50%) scaleX(1); bottom:32%; left:28%; }\r\n    }\r\n    @keyframes home {\r\n        0%  { bottom:32%; left:28%; }\r\n        99% { transform : translateX(-50%) rotate(3600deg) scaleX(1); bottom:-10%; left:62.5%; }\r\n        100% { transform : translateX(-50%) scaleX(1); bottom:-10%; left:62.5%; }\r\n    }\r\n`;\r\n\r\nconst Hitter = ({ currBase }) => {\r\n    return (\r\n        <HitterImg className={currBase} />\r\n    )\r\n}\r\n\r\nexport default Hitter\r\n","import React from 'react'\r\nimport Hitter from './Hitter';\r\nimport effectSound from '../../../utils/effectSound';\r\nimport hitterES from '../../../audios/hitterES.mp3';\r\n\r\nconst Base = ({ boxOnHitter, runners }) => {\r\n    const hitterSound = effectSound(hitterES, 0.7);\r\n    if (boxOnHitter) hitterSound.play();\r\n\r\n    return (\r\n        <>\r\n            {boxOnHitter && <Hitter />}\r\n            {runners}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Base\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components';\r\nimport Hitter from './Hitter';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\nimport effectSound from '../../../utils/effectSound';\r\nimport hitES from '../../../audios/hitES.mp3';\r\nimport homeES from '../../../audios/homeES.mp3';\r\n\r\nconst GameButtonsWrap = styled.div`\r\n    position: absolute;\r\n    bottom: 5%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    width: 750px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    z-index: 2;\r\n    & button {\r\n        font-size: 25px;\r\n        width: 220px;\r\n        height: 60px;\r\n        border-radius: 10px;\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst GameButtons = ({ boxOnHitter, setBoxOnHitter, runners, setRunners }) => {\r\n    const { baseCount, setBaseCount, ballCountDispatch } = useContext(MatchContext);\r\n    const hitSound = effectSound(hitES, 0.7);\r\n    const homeSound = effectSound(homeES, 0.7);\r\n    const timeoutId = useRef();\r\n\r\n    const setRunnerAnim = () => {\r\n        const currRunners = [...runners, <Hitter />];\r\n        const updateRunners = currRunners.map((runner, idx) => {\r\n            if (idx > 3) return;\r\n            let currBase;\r\n            switch (runner.props.currBase) {\r\n                case 'first': currBase = 'second';\r\n                    break;\r\n                case 'second': currBase = 'third';\r\n                    break;\r\n                case 'third': currBase = 'home';\r\n                    break;\r\n                default: currBase = 'first';\r\n                    break;\r\n            }\r\n            return <Hitter key={idx} {...{ currBase }} />\r\n        });\r\n        setRunners([...updateRunners]);\r\n    }\r\n\r\n    const handleSwingClick = () => {\r\n        hitSound.play();\r\n        setBoxOnHitter(false);\r\n        setRunnerAnim();\r\n        timeoutId.current = setTimeout(() => setBoxOnHitter(true), 2500);\r\n\r\n        updateBallCount();\r\n\r\n        if (baseCount + 1 >= 4) {\r\n            // 득점처리\r\n            setTimeout(() => homeSound.play(), 1000);\r\n            return;\r\n        }\r\n        setBaseCount(baseCount + 1);\r\n    };\r\n\r\n    const handleWaitClick = () => {\r\n        alert('공 사 중 ㅋ ㅜ');\r\n    }\r\n\r\n    const updateBallCount = () => {\r\n        ballCountDispatch({ type: 'BALL' });\r\n        ballCountDispatch({ type: 'STRIKE' });\r\n        ballCountDispatch({ type: 'OUT' });\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => clearTimeout(timeoutId.current);\r\n    }, []);\r\n\r\n    return (\r\n        <GameButtonsWrap>\r\n            <button onClick={handleSwingClick} disabled={!boxOnHitter}>SWING</button>\r\n            <button onClick={handleWaitClick} disabled={!boxOnHitter}>WAIT</button>\r\n        </GameButtonsWrap>\r\n    )\r\n}\r\n\r\nexport default GameButtons\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport Base from './Base';\r\nimport GameButtons from './GameButtons';\r\n\r\nconst GroundWrap = styled.div`\r\n    position : relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background : url('/images/ground.jpg') no-repeat;\r\n    background-size : 100% 100%;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Ground = () => {\r\n    const [boxOnHitter, setBoxOnHitter] = useState(true);\r\n    const [runners, setRunners] = useState([]);\r\n\r\n    return (\r\n        <GroundWrap>\r\n            <GameButtons {...{ boxOnHitter, setBoxOnHitter, runners, setRunners }} />\r\n            <Base {...{ boxOnHitter, runners }} />\r\n        </GroundWrap>\r\n    )\r\n}\r\n\r\nexport default Ground\r\n","import React from 'react'\r\n\r\nconst TScore = ({ scoreData }) => {\r\n    const inningScoreFrame = [\r\n        <td key='1st'></td>,\r\n        <td key='2st'></td>,\r\n        <td key='3st'></td>,\r\n        <td key='4st'></td>,\r\n        <td key='5st'></td>,\r\n        <td key='6st'></td>,\r\n        <td key='7st'></td>,\r\n        <td key='8st'></td>,\r\n        <td key='9st'></td>];\r\n\r\n    const inningScore = scoreData.board.reduce((acc, data, idx) => {\r\n        acc[idx] = <td key={`${data.inning}st`}>{data.scoring}</td>\r\n        return acc;\r\n    }, inningScoreFrame);\r\n\r\n    return (\r\n        <tr>\r\n            <td>{scoreData.teamName}</td>\r\n            {inningScore}\r\n            <td>{scoreData.totalScore}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TScore\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\nimport TScore from './TScore';\r\n\r\nconst ScoreInfoWrap = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #00000080;\r\n    z-index: 10;\r\n`;\r\n\r\nconst ScoreInfoBox = styled.div`\r\n    position: absolute;\r\n    top: -25%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 800px;\r\n    height: 250px;\r\n    border: 2px solid #fff;\r\n    color: #fff;\r\n    background-color: #000;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation-duration: 1.5s;\r\n    animation-fill-mode: both;\r\n    &.show-content {\r\n        animation-name: show-scoreInfo;\r\n    }\r\n    &.hide-content {\r\n        animation-name: hide-scoreInfo;\r\n    }\r\n    @keyframes show-scoreInfo {\r\n        0%  { top: -25%; }\r\n        100% { top: 25%; }\r\n    }\r\n    @keyframes hide-scoreInfo {\r\n        0%  { top: 25%; }\r\n        100% { top: -25%; }\r\n    }\r\n    & table {\r\n        text-align: center;\r\n        width: 90%;\r\n        & thead {\r\n            font-size: 30px;\r\n            border-bottom: 1px solid #fff;\r\n            & tr {\r\n                line-height: 50px;\r\n                & th {\r\n                }\r\n            }\r\n        }\r\n        & tbody {\r\n            font-size: 30px;\r\n            & tr {\r\n                line-height: 70px;\r\n                padding-top: 10px;\r\n                &:first-child {\r\n                    border-bottom: 1px solid #fff;\r\n                }\r\n                & td {\r\n                    &:last-child {\r\n                        color: #f00;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ScoreInfo = ({ showContent }) => {\r\n    const { detailScore } = useContext(MatchContext);\r\n    const showClassName = showContent.scoreInfo ? 'show-content' : 'hide-content';\r\n\r\n    return (\r\n        <ScoreInfoWrap data-type='contentPanel' data-content='scoreInfo'>\r\n            <ScoreInfoBox className={showClassName}>\r\n                <table>\r\n                    <colgroup>\r\n                        <col width='30%' />\r\n                    </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>1</th>\r\n                            <th>2</th>\r\n                            <th>3</th>\r\n                            <th>4</th>\r\n                            <th>5</th>\r\n                            <th>6</th>\r\n                            <th>7</th>\r\n                            <th>8</th>\r\n                            <th>9</th>\r\n                            <th>R</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <TScore scoreData={detailScore.away} />\r\n                        <TScore scoreData={detailScore.home} />\r\n                    </tbody>\r\n                </table>\r\n            </ScoreInfoBox>\r\n        </ScoreInfoWrap>\r\n    )\r\n}\r\n\r\nexport default ScoreInfo\r\n","import React from 'react'\r\n\r\nconst TPlayer = ({ teamData }) => {\r\n    const hitters = teamData.teamInfo.map((hitter, idx) => {\r\n        return (\r\n            <tr key={idx}>\r\n                <td>{hitter.name}</td>\r\n                <td>{hitter.batterBox}</td>\r\n                <td>{hitter.hit}</td>\r\n                <td>{hitter.out}</td>\r\n                <td>{hitter.average}</td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan='5'>{teamData.teamName}</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>타자</th>\r\n                    <th>타석</th>\r\n                    <th>안타</th>\r\n                    <th>아웃</th>\r\n                    <th>평균</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {hitters}\r\n                <tr>\r\n                    <td>Totals</td>\r\n                    <td>{teamData.totalsBatterBox}</td>\r\n                    <td>{teamData.totalsHit}</td>\r\n                    <td>{teamData.totalsOut}</td>\r\n                    <td></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TPlayer\r\n","import React, { useContext } from 'react'\r\nimport useFetch from '../../../hooks/useFetch';\r\nimport styled from 'styled-components';\r\nimport { MatchContext } from '../../../store/MatchStore';\r\nimport TPlayer from './TPlayer';\r\nimport URL from '../../../constants/url';\r\n\r\nconst PlayerInfoWrap = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #00000080;\r\n    z-index: 10;\r\n`;\r\n\r\nconst PlayerInfoBox = styled.div`\r\n    position: absolute;\r\n    top: -50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 800px;\r\n    height: 600px;\r\n    border: 2px solid #fff;\r\n    color: #fff;\r\n    background-color: #000;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    animation-duration: 1.5s;\r\n    animation-fill-mode: both;\r\n    &.show-content {\r\n        animation-name: show-playerInfo;\r\n    }\r\n    &.hide-content {\r\n        animation-name: hide-playerInfo;\r\n    }\r\n    @keyframes show-playerInfo {\r\n        0%  { top: -50%; }\r\n        100% { top: 50%; }\r\n    }\r\n    @keyframes hide-playerInfo {\r\n        0%  { top: 50%; }\r\n        100% { top: -50%; }\r\n    }\r\n    & table {\r\n        font-size: 24px;\r\n        width: 350px;\r\n        text-align: center;\r\n        & thead {\r\n            & tr {\r\n                line-height: 50px;\r\n                font-size: 30px;\r\n                font-weight: 600;\r\n                border-bottom: 1px solid #fff;\r\n                &:last-child {\r\n                font-weight: 300;\r\n                    color: #918d8d;\r\n                    font-size: 24px;\r\n                }\r\n\r\n            }\r\n        }\r\n        & tbody {\r\n            & tr {\r\n                border-bottom: 1px solid #fff;\r\n                line-height: 40px;\r\n                &:last-child {\r\n                    font-weight: 600;\r\n                    border-bottom: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst CenterLine = styled.div`\r\n    width: 1px;\r\n    height: 500px;\r\n    border-left: 1px solid #fff;\r\n`;\r\n\r\nconst PlayerInfo = ({ showContent }) => {\r\n    const { gameId, playerList, playerListDispatch } = useContext(MatchContext);\r\n    const { BASE, PLAYER_LIST } = URL;\r\n    const showClassName = showContent.playerInfo ? 'show-content' : 'hide-content';\r\n    const updataPlayerList = (data) => playerListDispatch({ type: 'UPDATA_PLAYERLIST', payload: data });\r\n    const loading = useFetch(updataPlayerList, BASE + PLAYER_LIST(gameId));\r\n\r\n    return (\r\n        <PlayerInfoWrap data-type='contentPanel' data-content='playerInfo'>\r\n            <PlayerInfoBox className={showClassName}>\r\n                {!loading &&\r\n                    <>\r\n                        <TPlayer teamData={playerList.away} />\r\n                        <CenterLine />\r\n                        <TPlayer teamData={playerList.home} />\r\n                    </>}\r\n            </PlayerInfoBox>\r\n        </PlayerInfoWrap>\r\n    )\r\n}\r\n\r\nexport default PlayerInfo\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst InfoButtonsWrap = styled.div`\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 250px;\r\n    z-index: 10;\r\n    & button {\r\n        background-color: #000;\r\n        color: #fff;\r\n        outline: none;\r\n        border: 1px solid #ccc;\r\n        width: 100px;\r\n        height: 30px;\r\n        border-radius: 3px;\r\n    }\r\n`;\r\n\r\nconst InfoButtons = ({ showContent, setShowPanel, setShowContent }) => {\r\n    const handleShowScoreInfo = (showItem) => {\r\n        setShowPanel(showItem);\r\n        setShowContent(showItem);\r\n    }\r\n\r\n    return (\r\n        <InfoButtonsWrap>\r\n            <button onClick={() => handleShowScoreInfo({ ...showContent, scoreInfo: true })}>상세 점수</button>\r\n            <button onClick={() => handleShowScoreInfo({ ...showContent, playerInfo: true })}>선수 명단</button>\r\n        </InfoButtonsWrap>\r\n    )\r\n}\r\n\r\nexport default InfoButtons\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport ScoreInfo from './ScoreInfo';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport InfoButtonsWrap from './InfoButtons';\r\n\r\nconst DetailInfo = () => {\r\n    const defaultState = { scoreInfo: false, playerInfo: false };\r\n    const [showPanel, setShowPanel] = useState(defaultState);\r\n    const [showContent, setShowContent] = useState(defaultState);\r\n    const timeoutId = useRef();\r\n\r\n    const handleClose = ({ target }) => {\r\n        if (target.dataset.type !== 'contentPanel') return;\r\n        const _showContent = { ...showContent };\r\n        _showContent[target.dataset.content] = false;\r\n        setShowContent({ ...showContent, ..._showContent });\r\n        timeoutId.current = setTimeout(() => setShowPanel({ ...showPanel, ..._showContent }), 1200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setShowPanel({ ...showPanel, ...defaultState });\r\n            return clearTimeout(timeoutId.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <InfoButtonsWrap {...{ showContent, setShowPanel, setShowContent }} />\r\n            <div onClick={handleClose}>\r\n                {showPanel.scoreInfo && <ScoreInfo {...{ showContent }} />}\r\n                {showPanel.playerInfo && <PlayerInfo {...{ showContent }} />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailInfo\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport useSound from '../../hooks/useSound';\r\nimport styled from 'styled-components';\r\nimport ScoreBoard from './scoreBoard/ScoreBoard';\r\nimport MatchLog from './matchLog/MatchLog';\r\nimport Ground from './ground/Ground';\r\nimport DetailInfo from './detailInfo/DetailInfo';\r\nimport MatchBGM from '../../audios/MatchBGM.mp3';\r\nimport MatchStore from '../../store/MatchStore';\r\n\r\nconst MatchWrap = styled.div`\r\n    position : relative;\r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\n\r\nconst Match = () => {\r\n    const { teamId, gameId } = useParams();\r\n    useSound(MatchBGM, 0.3, 2000);\r\n\r\n    return (\r\n        <MatchWrap>\r\n            <MatchStore {...{ teamId, gameId }}>\r\n                <ScoreBoard />\r\n                <MatchLog />\r\n                <Ground />\r\n                <DetailInfo />\r\n            </MatchStore>\r\n        </MatchWrap>\r\n    )\r\n}\r\n\r\nexport default Match\r\n","async function dataFetch(url, option = { method: 'GET' }) {\r\n    const response = await fetch(url, option);\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport default dataFetch;","import React, { useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport URL from '../../constants/url';\r\nimport dataFetch from '../../utils/dataFetch';\r\nimport effectSound from '../../utils/effectSound';\r\nimport readyES from '../../audios/readyES.mp3';\r\n\r\nconst Game = styled.div`\r\n    position : relative;\r\n    width : 100%;\r\n    height : 80px;\r\n    background-color : #ffffff80;\r\n    border-radius : 10px;\r\n    margin-bottom : 10px;\r\n    text-align : center;\r\n    font-weight : 600;\r\n    display : flex;\r\n    justify-content : space-around;\r\n    align-items : center;\r\n    & .team-name {\r\n        font-size : 22px;\r\n        width : 50%;\r\n        color : #000;\r\n        text-decoration : none;\r\n        cursor: pointer;\r\n        &:hover {\r\n            color : #f00;\r\n        }\r\n    }\r\n    & .game-id {\r\n        position : absolute;\r\n        top : 10%;\r\n        left : 50%;\r\n        transform : translateX(-50%);\r\n        font-size : 15px;\r\n    }\r\n    & .vs {\r\n        position : absolute;\r\n        top : 50%;\r\n        left : 50%;\r\n        transform : translateX(-50%);\r\n        font-size : 18px;\r\n    }\r\n`;\r\n\r\nconst Games = ({ gameData, setReady, setStateText }) => {\r\n    const { teamData } = gameData;\r\n    const { BASE, SELECT_TEAM, SELECT_GAME } = URL;\r\n    const readySound = effectSound(readyES);\r\n    const history = useHistory();\r\n    const intervalId = useRef();\r\n\r\n    const fetchOption = {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            Cookie: process.env.REACT_APP_TEMP_COOKIE\r\n        }\r\n    }\r\n\r\n    const handleSelectTeam = async (teamId, gameId) => {\r\n        const teamUrl = BASE + SELECT_TEAM + teamId;\r\n        const gameUrl = BASE + SELECT_GAME + gameId;\r\n        const isSelected = await dataFetch(teamUrl, fetchOption);\r\n        if (!isSelected) return setStateText('이미 선택된 팀입니다. 다른 팀을 선택해주세요!');\r\n        setStateText('상대를 기다리고 있습니다...');\r\n        setReady(true);\r\n\r\n        intervalId.current = setInterval(async () => {\r\n            const isStart = await dataFetch(gameUrl, fetchOption);\r\n            if (!isStart) return;\r\n            clearInterval(intervalId.current);\r\n            setStateText('GET READY FOR THE NEXT BATTLE');\r\n            readySound.play();\r\n            setTimeout(() => {\r\n                history.push(`/match/${teamId}/${gameId}`);\r\n            }, 4000);\r\n        }, 2000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => clearInterval(intervalId.current);\r\n    }, []);\r\n\r\n    const games = teamData.map(game => {\r\n        return (\r\n            <Game key={game.gameNumber}>\r\n                <div data-team-id={game.away.id} className='team-name' onClick={() => handleSelectTeam(game.away.id, game.gameNumber)}>\r\n                    {game.away.name}\r\n                </div>\r\n                <span className='game-id'>GAME {game.gameNumber}</span>\r\n                <span className='vs'>VS</span>\r\n                <div data-team-id={game.home.id} className='team-name' onClick={() => handleSelectTeam(game.home.id, game.gameNumber)}>\r\n                    {game.home.name}\r\n                </div>\r\n            </Game>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {games}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Games\r\n","import React, { useState } from 'react'\r\nimport useSound from '../../hooks/useSound';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport URL from '../../constants/url';\r\nimport styled from 'styled-components';\r\nimport Games from './Games';\r\nimport SelectBGM from '../../audios/SelectBGM.mp3';\r\nimport loading from '../../assets/loading.svg';\r\n\r\nconst SelectWrap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -10;\r\n    width : 100%;\r\n    height : 100%;\r\n    background : url('/images/ground.jpg') no-repeat;\r\n    background-size : 100% 100%;\r\n    filter: blur(5px);\r\n    -webkit-filter: blur(5px);\r\n`;\r\n\r\nconst SelectInner = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n    background-color : #00000099;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size : 70px;\r\n    font-weight : 600;\r\n    margin-bottom : 80px;\r\n    background-image: linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red);   \r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n    animation-name: bingle;\r\n    animation-duration: 3s;\r\n    animation-timing-function:linear;\r\n    animation-iteration-count: infinite;\r\n    @keyframes bingle{\r\n        to { transform: rotate3d(0,1,0,360deg) }\r\n    }\r\n    &:hover {\r\n        animation-name: none;\r\n        transform : scale(1.5);\r\n    }\r\n`;\r\n\r\nconst StateText = styled.div`\r\n    color : #fff;\r\n    position: relative;\r\n    top: -10px;\r\n    font-size : 20px;\r\n    font-weight : 600;\r\n    margin-bottom : 20px;\r\n    z-index: 110;\r\n`;\r\n\r\nconst SelectBox = styled.div`\r\n    width : 400px;\r\n    height : 300px;\r\n    overflow : auto;\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst LoadingWarp = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #00000099;\r\n    z-index: 100;\r\n`;\r\n\r\nconst Select = () => {\r\n    const [gameData, setGameData] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n    const [stateText, setStateText] = useState('참가할 게임을 선택하세요!');\r\n    const { BASE, GAMES } = URL;\r\n    useFetch(setGameData, BASE + GAMES);\r\n    useSound(SelectBGM, 0.5, 10000);\r\n\r\n    return (\r\n        <SelectWrap>\r\n            <SelectInner>\r\n                {ready && <LoadingWarp><img src={loading} alt='loading' /></LoadingWarp>}\r\n                <Title>게임 선택 ^.^</Title>\r\n                <StateText>{stateText}</StateText>\r\n                <SelectBox>\r\n                    {gameData && <Games {...{ gameData, setReady, setStateText }} />}\r\n                </SelectBox>\r\n            </SelectInner>\r\n            <Background />\r\n        </SelectWrap>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst NotFoundWrap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: -10;\r\n    width : 100%;\r\n    height : 100%;\r\n    background : url('/images/bonobono.jpg') no-repeat;\r\n    background-size : 100% 100%;\r\n    filter: blur(5px);\r\n    -webkit-filter: blur(5px);\r\n`;\r\n\r\nconst NotFoundInner = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    background-color : #00000099;\r\n    display : flex;\r\n    align-items : center;\r\n    justify-content : center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size : 55px;\r\n    font-weight : 600;\r\n    margin-bottom : 80px;\r\n    background-image: linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red);   \r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n`;\r\n\r\nconst NotFound = () => {\r\n    const [wait, setWait] = useState(true);\r\n    const timeoutId = useRef();\r\n    timeoutId.current = setTimeout(() => setWait(false), 4000);\r\n\r\n    useEffect(() => {\r\n        return () => clearTimeout(timeoutId.current);\r\n    })\r\n\r\n    return (\r\n        <NotFoundWrap>\r\n            <NotFoundInner>\r\n                {wait ? <Title>존재하지 않는 페이지 입니다. 메인 페이지로 이동 합니다.</Title> : <Redirect to='/' />}\r\n            </NotFoundInner>\r\n            <Background />\r\n        </NotFoundWrap>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport GlobalStyle from './styles/GlobalStyle';\r\nimport Main from './components/main/Main';\r\nimport Match from './components/match/Match';\r\nimport Select from './components/select/Select';\r\nimport NotFound from './components/NotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <GlobalStyle />\r\n      <Switch>\r\n        <Route exact path='/' component={Main} />\r\n        <Route path='/select' component={Select} />\r\n        <Route path='/match/:teamId/:gameId' component={Match} />\r\n        <Route path='/api/githublogin'>\r\n          <Redirect to='/select' />\r\n        </Route>\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}